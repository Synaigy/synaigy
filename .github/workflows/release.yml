name: Release

on:
  push:
    branches:
      - main

# Prevent multiple release workflows from running simultaneously
concurrency: ${{ github.workflow }}-${{ github.ref }}

# Add permissions for the workflow
permissions:
  contents: write
  pull-requests: write
  id-token: write # For provenance/SLSA

jobs:
  # First verify that the code passes all tests
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Lint
        run: pnpm lint

      - name: Test
        run: pnpm test

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build-and-test # Require build-and-test to pass first

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      # Add this step to verify npm configuration
      - name: Verify npm configuration
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm whoami --registry=https://registry.npmjs.org/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      # Run tests one more time to ensure we have a clean build
      - name: Test
        run: pnpm test

      # Create a GitHub release and/or publish to npm
      - name: Create release PR or publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # The publish parameter should be a single command that changesets can execute properly
          publish: pnpm changeset publish
          commit: "chore(release): version packages"
          title: "ðŸš€ Release: New Version"
          # Create GitHub Releases when packages are published
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
